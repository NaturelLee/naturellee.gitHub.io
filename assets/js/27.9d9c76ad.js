(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{254:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"rust-std-docs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rust-std-docs"}},[t._v("#")]),t._v(" Rust Std Docs")]),t._v(" "),s("h2",{attrs:{id:"cell"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cell"}},[t._v("#")]),t._v(" Cell")]),t._v(" "),s("h2",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("h3",{attrs:{id:"str"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#str"}},[t._v("#")]),t._v(" &str")]),t._v(" "),s("div",{staticClass:"language-rust line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string literal")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" s2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",[s("li",[t._v("&str is stored directly in the compiled binary.")]),t._v(" "),s("li",[t._v("Stored in Text/Code segment.")]),t._v(" "),s("li",[t._v("&str has a static lifetime. They are never deallocated.")])]),t._v(" "),s("h2",{attrs:{id:"misconceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#misconceptions"}},[t._v("#")]),t._v(" Misconceptions")]),t._v(" "),s("h3",{attrs:{id:"t-t-mut-t"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#t-t-mut-t"}},[t._v("#")]),t._v(" T, &T, &mut T")]),t._v(" "),s("ol",[s("li",[t._v("T is a superset of both &T and &mut T")]),t._v(" "),s("li",[t._v("&T and &mut T are disjoint sets")])]),t._v(" "),s("h3",{attrs:{id:"t-static"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#t-static"}},[t._v("#")]),t._v(" T: 'static")]),t._v(" "),s("ol",[s("li",[t._v("T: 'static should be read as \"T is bounded by a 'static lifetime\"")]),t._v(" "),s("li",[t._v("if T: 'static then T can be a borrowed type with a 'static lifetime or an owned type")]),t._v(" "),s("li",[t._v("since T: 'static includes owned types that means T\n"),s("ol",[s("li",[t._v("can be dynamically allocated at run-time")]),t._v(" "),s("li",[t._v("does not have to be valid for the entire program")]),t._v(" "),s("li",[t._v("can be safely and freely mutated")]),t._v(" "),s("li",[t._v("can be dynamically dropped at run-time")]),t._v(" "),s("li",[t._v("can have lifetimes of different durations")])])])]),t._v(" "),s("h3",{attrs:{id:"a-t-and-t-a"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-t-and-t-a"}},[t._v("#")]),t._v(" &â€˜a T and T: 'a")])])}),[],!1,null,null,null);a.default=r.exports}}]);