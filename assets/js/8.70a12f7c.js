(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{194:function(t,a,v){t.exports=v.p+"assets/img/complexity.31f735f2.png"},235:function(t,a,v){"use strict";v.r(a);var s=v(0),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数据结构和算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法"}},[t._v("#")]),t._v(" 数据结构和算法")]),t._v(" "),s("h2",{attrs:{id:"复杂度分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),s("ol",[s("li",[t._v("大 O 复杂度表示法")])]),t._v(" "),s("h3",{attrs:{id:"时间复杂度分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度分析"}},[t._v("#")]),t._v(" 时间复杂度分析")]),t._v(" "),s("p",[t._v("全称是渐进时间复杂度（asymptotic time complexity），表示算法的"),s("strong",[t._v("执行时间")]),t._v("与数据规模之间的增长关系。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. 只关注循环执行次数最多的一段代码\n2. 加法法则：总复杂度等于量级最大的那段代码的复杂度\n3. 乘法法则：嵌套代码的复杂度等于嵌套内外代码复杂度的乘积 --- 嵌套循环\n")])])]),s("p",[s("img",{attrs:{src:v(194),alt:"complexity"}})]),t._v(" "),s("ol",[s("li",[t._v("常量阶O(1)： 一般情况下，只要算法中不存在循环语句、递归语句，即使有成千上万行的代码，其时间复杂度也是Ο(1)。")]),t._v(" "),s("li",[t._v("对数阶O(log n)：")]),t._v(" "),s("li",[t._v("线性阶O(n)：")]),t._v(" "),s("li",[t._v("O(m + n), O(m * n)：")]),t._v(" "),s("li",[t._v("线性对数阶O(n log n)：")]),t._v(" "),s("li",[t._v("平方阶O(n^2)、立方阶O(n^3)、...k次方阶O(n^k)：")]),t._v(" "),s("li",[t._v("指数阶O(2^n)：")]),t._v(" "),s("li",[t._v("阶乘阶O(n!)：")])]),t._v(" "),s("p",[t._v("四个方面：")]),t._v(" "),s("ol",[s("li",[t._v("最好情况时间复杂度（best case time complexity）")]),t._v(" "),s("li",[t._v("最坏情况时间复杂度（worst case time complexity）")]),t._v(" "),s("li",[t._v("平均情况时间复杂度（average case time complexity）")]),t._v(" "),s("li",[t._v("均摊时间复杂度（amortized time complexity）")])]),t._v(" "),s("h3",{attrs:{id:"空间复杂度分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度分析"}},[t._v("#")]),t._v(" 空间复杂度分析")]),t._v(" "),s("p",[t._v("全称就是渐进空间复杂度（asymptotic space complexity），表示算法的"),s("strong",[t._v("存储空间")]),t._v("与数据规模之间的增长关系。")]),t._v(" "),s("h2",{attrs:{id:"最常用、最基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最常用、最基础"}},[t._v("#")]),t._v(" 最常用、最基础")]),t._v(" "),s("ol",[s("li",[t._v("10 个数据结构：数组、链表、栈、队列、散列表、二叉树、堆、跳表、图、Trie 树；")]),t._v(" "),s("li",[t._v("10 个算法：递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、回溯算法、动态规划、字符串匹配算法。")])]),t._v(" "),s("h2",{attrs:{id:"学习技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习技巧"}},[t._v("#")]),t._v(" 学习技巧")]),t._v(" "),s("ol",[s("li",[t._v("边学边练，适度刷题")]),t._v(" "),s("li")])])}),[],!1,null,null,null);a.default=_.exports}}]);