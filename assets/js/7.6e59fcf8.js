(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{193:function(t,s,e){t.exports=e.p+"assets/img/segments0.a8b51772.png"},194:function(t,s,e){t.exports=e.p+"assets/img/segments.f7179869.png"},228:function(t,s,e){"use strict";e.r(s);var a=e(0),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"操作系统相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统相关"}},[t._v("#")]),t._v(" 操作系统相关")]),t._v(" "),a("h2",{attrs:{id:"虚拟地址空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟地址空间"}},[t._v("#")]),t._v(" 虚拟地址空间")]),t._v(" "),a("p",[t._v("在 32 位机器下，虚拟地址空间大小为 4G。这些虚拟地址通过页表 (Page Table) 映射到物理内存，页表由操作系统维护，并被处理器的内存管理单元 (MMU) 硬件引用。"),a("strong",[a("em",[t._v("每个进程都拥有一套属于它自己的页表，因此对于每个进程而言都好像独享了整个虚拟地址空间。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:e(193),alt:"",title:"segments0"}})]),t._v(" "),a("p",[t._v("Linux 将这 4G 的空间分为两个部分：")]),t._v(" "),a("ol",[a("li",[t._v("内核空间。")]),t._v(" "),a("li",[t._v("用户空间。")])]),t._v(" "),a("h2",{attrs:{id:"memory-segment-内存段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memory-segment-内存段"}},[t._v("#")]),t._v(" Memory segment: 内存段")]),t._v(" "),a("p",[a("img",{attrs:{src:e(194),alt:"",title:"segments"}})]),t._v(" "),a("h3",{attrs:{id:"text-segment-代码段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-segment-代码段"}},[t._v("#")]),t._v(" text segment: 代码段")]),t._v(" "),a("p",[t._v("用于**"),a("em",[t._v("存放程序代码")]),t._v("**的区域，编译时确定，只读。更进一步讲是存放处理器的机器指令")]),t._v(" "),a("h3",{attrs:{id:"data-segment-数据段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-segment-数据段"}},[t._v("#")]),t._v(" data segment: 数据段")]),t._v(" "),a("p",[t._v("用于存放在编译阶段(而非运行时)就能确定的数据，可读可写。也是通常所说的**"),a("em",[t._v("静态存储区")]),a("strong",[t._v("，")]),a("em",[t._v("赋了初值的")]),t._v("**全局变量、常量和静态变量都存放在这个域。")]),t._v(" "),a("h3",{attrs:{id:"bss-segment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bss-segment"}},[t._v("#")]),t._v(" bss: segment")]),t._v(" "),a("p",[t._v("即: block started by symbol segment")]),t._v(" "),a("p",[t._v("通常是指用来存放程序中**"),a("em",[t._v("未初始化的全局变量")]),t._v("**，初始化时 bss 部分将会清零。")]),t._v(" "),a("h3",{attrs:{id:"heap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#heap"}},[t._v("#")]),t._v(" heap")]),t._v(" "),a("p",[t._v("存放进程运行中动态分配的内存段，大小不固定。")]),t._v(" "),a("h3",{attrs:{id:"stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[t._v("#")]),t._v(" stack")])])}),[],!1,null,null,null);s.default=r.exports}}]);