(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{234:function(t,a,r){"use strict";r.r(a);var s=r(0),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"数据结构和算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法"}},[t._v("#")]),t._v(" 数据结构和算法")]),t._v(" "),r("h2",{attrs:{id:"复杂度分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复杂度分析"}},[t._v("#")]),t._v(" 复杂度分析")]),t._v(" "),r("h2",{attrs:{id:"最常用、最基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#最常用、最基础"}},[t._v("#")]),t._v(" 最常用、最基础")]),t._v(" "),r("ol",[r("li",[t._v("10 个数据结构：数组、链表、栈、队列、散列表、二叉树、堆、跳表、图、Trie 树；")]),t._v(" "),r("li",[t._v("10 个算法：递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、回溯算法、动态规划、字符串匹配算法。")])]),t._v(" "),r("h2",{attrs:{id:"学习技巧"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习技巧"}},[t._v("#")]),t._v(" 学习技巧")]),t._v(" "),r("ol",[r("li",[t._v("边学边练，适度刷题")]),t._v(" "),r("li")])])}),[],!1,null,null,null);a.default=e.exports}}]);